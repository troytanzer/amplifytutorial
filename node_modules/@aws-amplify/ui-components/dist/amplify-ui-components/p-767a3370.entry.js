import{r as t,h as e}from"./p-73696195.js";import{I18n as i,isEmpty as s,Logger as n,ConsoleLogger as a}from"@aws-amplify/core";import{M as r,C as o,A as h,a as l}from"./p-417bb5ea.js";import{T as u}from"./p-15c6ee49.js";import{N as p,g as c}from"./p-50fc1c0c.js";import{Auth as d}from"@aws-amplify/auth";import{d as m,a as f,c as y,i as b,h as g,b as w,r as v}from"./p-4bfbe299.js";const x=class{constructor(e){t(this,e),this.handleSubmit=t=>this.confirm(t),this.headerText=i.get(u.CONFIRM_SMS_CODE),this.submitButtonText=i.get(u.CONFIRM),this.handleAuthStateChange=m,this.formFields=[{type:"code",required:!0,handleInputChange:t=>this.handleCodeChange(t)}],this.mfaOption=r.SMS,this.loading=!1}componentWillLoad(){this.user&&this.user.challengeName===o.SoftwareTokenMFA&&(this.mfaOption=r.TOTP,this.headerText===i.get(u.CONFIRM_SMS_CODE)&&(this.headerText=i.get(u.CONFIRM_TOTP_CODE)))}handleCodeChange(t){this.code=t.target.value}checkContact(t){if(!d||"function"!=typeof d.verifiedContact)throw new Error(p);d.verifiedContact(t).then(e=>{s(e.verified)?(t=Object.assign(t,e),this.handleAuthStateChange(h.VerifyContact,t)):this.handleAuthStateChange(h.SignedIn,t)})}async confirm(t){t&&t.preventDefault();const e=this.user.challengeName===o.SoftwareTokenMFA?o.SoftwareTokenMFA:null;if(!d||"function"!=typeof d.confirmSignIn)throw new Error(p);this.loading=!0;try{await d.confirmSignIn(this.user,this.code,e),this.checkContact(this.user)}catch(i){f(i)}finally{this.loading=!1}}render(){return e("amplify-form-section",{headerText:this.headerText,handleSubmit:this.handleSubmit,submitButtonText:this.submitButtonText,loading:this.loading,secondaryFooterContent:e("span",null,e("amplify-button",{variant:"anchor",onClick:()=>this.handleAuthStateChange(h.SignIn)},i.get(u.BACK_TO_SIGN_IN)))},e("amplify-auth-fields",{formFields:this.formFields}))}},C=class{constructor(e){t(this,e),this.handleSubmit=t=>this.confirmSignUp(t),this.headerText=i.get(u.CONFIRM_SIGN_UP_HEADER_TEXT),this.submitButtonText=i.get(u.CONFIRM_SIGN_UP_SUBMIT_BUTTON_TEXT),this.formFields=[],this.handleAuthStateChange=m,this.usernameAlias="username",this.loading=!1,this.userInput=this.user?this.user.username:null,this._signUpAttrs=this.user&&this.user.signUpAttrs?this.user.signUpAttrs:null,this.newFormFields=[],this.phoneNumber={countryDialCodeValue:c,phoneNumberValue:null}}componentWillLoad(){y(this.usernameAlias),this.buildFormFields()}formFieldsHandler(){this.buildFormFields()}buildDefaultFormFields(){this.newFormFields=[{type:""+this.usernameAlias,required:!0,handleInputChange:this.handleFormFieldInputChange(""+this.usernameAlias),value:this.userInput,disabled:!!this.userInput},{type:"code",label:i.get(u.CONFIRM_SIGN_UP_CODE_LABEL),placeholder:i.get(u.CONFIRM_SIGN_UP_CODE_PLACEHOLDER),required:!0,hint:e("div",null,i.get(u.CONFIRM_SIGN_UP_LOST_CODE)," ",e("amplify-button",{variant:"anchor",onClick:()=>this.resendConfirmCode()},i.get(u.CONFIRM_SIGN_UP_RESEND_CODE))),handleInputChange:this.handleFormFieldInputChange("code")}]}buildFormFields(){if(0===this.formFields.length)this.buildDefaultFormFields();else{const t=[];this.formFields.forEach(s=>{const n=Object.assign({},s);"code"===n.type&&(n.hint=b(n)?e("div",null,i.get(u.CONFIRM_SIGN_UP_LOST_CODE)," ",e("amplify-button",{variant:"anchor",onClick:()=>this.resendConfirmCode()},i.get(u.CONFIRM_SIGN_UP_RESEND_CODE))):n.hint),n.handleInputChange=t=>this.handleFormFieldInputWithCallback(t,s),t.push(n)}),this.newFormFields=t}}handleFormFieldInputChange(t){switch(t){case"username":case"email":return t=>this.userInput=t.target.value;case"phone_number":return t=>g(t,this.phoneNumber);case"code":return t=>this.code=t.target.value;default:return}}setFieldValue(t){switch(t.type){case"username":case"email":this.userInput=void 0===t.value?"":t.value;break;case"phone_number":t.dialCode&&(this.phoneNumber.countryDialCodeValue=t.dialCode),this.phoneNumber.phoneNumberValue=t.value}}handleFormFieldInputWithCallback(t,e){(e.handleInputChange?e.handleInputChange:(t,e)=>{e(t)})(t,this.handleFormFieldInputChange(e.type).bind(this))}async resendConfirmCode(){if(event&&event.preventDefault(),!d||"function"!=typeof d.resendSignUp)throw new Error(p);try{if(!this.userInput)throw new Error("Username can not be empty");await d.resendSignUp(this.userInput),this.handleAuthStateChange(h.ConfirmSignUp)}catch(t){f(t)}}async confirmSignUp(t){if(t&&t.preventDefault(),!d||"function"!=typeof d.confirmSignUp)throw new Error(p);switch(this.loading=!0,this.usernameAlias){case"phone_number":try{this.userInput=w(this.phoneNumber)}catch(e){f(e)}}try{const t=await d.confirmSignUp(this.userInput,this.code)&&this._signUpAttrs&&await d.signIn(this.userInput,this._signUpAttrs.password);this.handleAuthStateChange(h.SignedIn,t)}catch(e){f(e)}finally{this.loading=!1}}render(){return e("amplify-form-section",{headerText:this.headerText,submitButtonText:this.submitButtonText,handleSubmit:this.handleSubmit,secondaryFooterContent:e("div",null,e("span",null,e("amplify-button",{variant:"anchor",onClick:()=>this.handleAuthStateChange(h.SignIn)},i.get(u.BACK_TO_SIGN_IN))))},e("amplify-auth-fields",{formFields:this.newFormFields}))}static get watchers(){return{formFields:["formFieldsHandler"]}}},k=new n("ForgotPassword"),F=class{constructor(e){t(this,e),this.headerText=i.get(u.RESET_YOUR_PASSWORD),this.submitButtonText=i.get(u.SEND_CODE),this.formFields=[],this.handleSend=t=>this.send(t),this.handleSubmit=t=>this.submit(t),this.handleAuthStateChange=m,this.usernameAlias="username",this.delivery=null,this.loading=!1,this.phoneNumber={countryDialCodeValue:c,phoneNumberValue:null},this.newFormFields=[],this.forgotPasswordAttrs={userInput:"",password:"",code:""}}componentWillLoad(){y(this.usernameAlias),this.buildFormFields()}formFieldsHandler(){this.buildFormFields()}buildFormFields(){0===this.formFields.length?this.buildDefaultFormFields():this.formFields.forEach(t=>{const e=Object.assign({},t);e.handleInputChange=e=>this.handleFormFieldInputWithCallback(e,t),this.newFormFields.push(e)})}buildDefaultFormFields(){switch(this.usernameAlias){case"email":this.newFormFields=[{type:"email",required:!0,handleInputChange:this.handleFormFieldInputChange("email"),inputProps:{"data-test":"forgot-password-email-input"}}];break;case"phone_number":this.newFormFields=[{type:"phone_number",required:!0,handleInputChange:this.handleFormFieldInputChange("phone_number"),inputProps:{"data-test":"forgot-password-phone-number-input"}}];break;case"username":default:this.newFormFields=[{type:"username",required:!0,handleInputChange:this.handleFormFieldInputChange("username"),inputProps:{"data-test":"forgot-password-username-input"}}]}}handleFormFieldInputChange(t){switch(t){case"username":case"email":return t=>this.forgotPasswordAttrs.userInput=t.target.value;case"phone_number":return t=>g(t,this.phoneNumber);case"password":case"code":return e=>this.forgotPasswordAttrs[t]=e.target.value;default:return}}setFieldValue(t,e){switch(t.type){case"username":case"email":e.userInput=void 0===t.value?"":t.value;break;case"phone_number":t.dialCode&&(this.phoneNumber.countryDialCodeValue=t.dialCode),this.phoneNumber.phoneNumberValue=t.value;break;case"password":case"code":e[t.type]=void 0===t.value?"":t.value}}handleFormFieldInputWithCallback(t,e){(e.handleInputChange?e.handleInputChange:(t,e)=>{e(t)})(t,this.handleFormFieldInputChange(e.type).bind(this))}async send(t){if(t&&t.preventDefault(),!d||"function"!=typeof d.forgotPassword)throw new Error(p);switch(this.loading=!0,this.usernameAlias){case"phone_number":try{this.forgotPasswordAttrs.userInput=w(this.phoneNumber)}catch(e){f(e)}}try{const t=await d.forgotPassword(this.forgotPasswordAttrs.userInput);k.debug(t),this.newFormFields=[{type:"code",required:!0,handleInputChange:this.handleFormFieldInputChange("code"),inputProps:{"data-test":"forgot-password-code-input"}},{type:"password",required:!0,handleInputChange:this.handleFormFieldInputChange("password"),label:i.get(u.NEW_PASSWORD_LABEL),placeholder:i.get(u.NEW_PASSWORD_PLACEHOLDER)}],this.delivery=t.CodeDeliveryDetails}catch(e){f(e)}finally{this.loading=!1}}async submit(t){if(t&&t.preventDefault(),!d||"function"!=typeof d.forgotPasswordSubmit)throw new Error(p);this.loading=!0;try{const{userInput:t,code:e,password:i}=this.forgotPasswordAttrs,s=await d.forgotPasswordSubmit(t,e,i);k.debug(s),this.handleAuthStateChange(h.SignIn),this.delivery=null}catch(e){f(e)}finally{this.loading=!1}}render(){return e("amplify-form-section",{headerText:this.headerText,handleSubmit:this.delivery?t=>this.handleSubmit(t):t=>this.handleSend(t),loading:this.loading,secondaryFooterContent:e("amplify-button",{variant:"anchor",onClick:()=>this.handleAuthStateChange(h.SignIn),"data-test":"forgot-password-back-to-sign-in-link"},i.get(u.BACK_TO_SIGN_IN)),testDataPrefix:"forgot-password",submitButtonText:i.get(u.SEND_CODE)},e("amplify-auth-fields",{formFields:this.newFormFields}))}static get watchers(){return{formFields:["formFieldsHandler"]}}},_=new a("amplify-require-new-password"),I=class{constructor(e){t(this,e),this.headerText=i.get(u.CHANGE_PASSWORD),this.submitButtonText=i.get(u.CHANGE_PASSWORD_ACTION),this.handleSubmit=t=>this.completeNewPassword(t),this.handleAuthStateChange=m,this.formFields=[{type:l.Password,required:!0,handleInputChange:t=>this.handlePasswordChange(t),label:i.get(u.NEW_PASSWORD_LABEL),placeholder:i.get(u.NEW_PASSWORD_PLACEHOLDER),inputProps:{"data-test":"require-new-password-password-input"}}],this.currentUser=this.user,this.loading=!1,this.requiredAttributes={},this.newFormFields=this.formFields}handleRequiredAttributeInputChange(t,e){this.requiredAttributes[t]=e.target.value}async componentWillLoad(){if(!this.user)try{const t=await d.currentAuthenticatedUser();t&&(this.currentUser=t)}catch(t){f(t)}this.currentUser&&this.currentUser.challengeParam.requiredAttributes&&this.currentUser.challengeParam.requiredAttributes.forEach(t=>{this.newFormFields.push({type:t,required:!0,label:v[t].label,placeholder:v[t].placeholder,handleInputChange:e=>this.handleRequiredAttributeInputChange(t,e),inputProps:{"data-test":`require-new-password-${t}-input`}})})}handlePasswordChange(t){this.password=t.target.value}async checkContact(t){if(!d||"function"!=typeof d.verifiedContact)throw new Error(p);try{const e=await d.verifiedContact(t);s(e.verified)?(t=Object.assign(t,e),this.handleAuthStateChange(h.VerifyContact,t)):this.handleAuthStateChange(h.SignedIn,t)}catch(e){f(e)}}async completeNewPassword(t){if(t&&t.preventDefault(),!d||"function"!=typeof d.completeNewPassword)throw new Error(p);this.loading=!0;try{const t=await d.completeNewPassword(this.currentUser,this.password,this.requiredAttributes);switch(_.debug("complete new password",t),t.challengeName){case o.SMSMFA:this.handleAuthStateChange(h.ConfirmSignIn,t);break;case o.MFASetup:_.debug("TOTP setup",t.challengeParam),this.handleAuthStateChange(h.TOTPSetup,t);break;default:this.checkContact(t)}}catch(e){f(e)}finally{this.loading=!1}}render(){return e("amplify-form-section",{headerText:this.headerText,handleSubmit:this.handleSubmit,loading:this.loading,secondaryFooterContent:e("amplify-button",{variant:"anchor",onClick:()=>this.handleAuthStateChange(h.SignIn)},i.get(u.BACK_TO_SIGN_IN))},e("amplify-auth-fields",{formFields:this.newFormFields}))}},P=new n("SignIn"),q=class{constructor(e){t(this,e),this.handleSubmit=t=>this.signIn(t),this.headerText=i.get(u.SIGN_IN_HEADER_TEXT),this.submitButtonText=i.get(u.SIGN_IN_ACTION),this.handleAuthStateChange=m,this.usernameAlias="username",this.formFields=[],this.hideSignUp=!1,this.newFormFields=[],this.loading=!1,this.phoneNumber={countryDialCodeValue:c,phoneNumberValue:null},this.signInAttributes={userInput:"",password:""}}componentWillLoad(){y(this.usernameAlias),this.buildFormFields()}formFieldsHandler(){this.buildFormFields()}handleFormFieldInputChange(t){switch(t){case"username":case"email":return t=>this.signInAttributes.userInput=t.target.value;case"phone_number":return t=>g(t,this.phoneNumber);case"password":return t=>this.signInAttributes.password=t.target.value}}handleFormFieldInputWithCallback(t,e){(e.handleInputChange?e.handleInputChange:(t,e)=>{e(t)})(t,this.handleFormFieldInputChange(e.type).bind(this))}checkContact(t){if(!d||"function"!=typeof d.verifiedContact)throw new Error(p);d.verifiedContact(t).then(e=>{s(e.verified)?(t=Object.assign(t,e),this.handleAuthStateChange(h.VerifyContact,t)):this.handleAuthStateChange(h.SignedIn,t)})}async signIn(t){if(t&&t.preventDefault(),!d||"function"!=typeof d.signIn)throw new Error(p);switch(this.loading=!0,this.usernameAlias){case"phone_number":try{this.signInAttributes.userInput=w(this.phoneNumber)}catch(e){f(e)}}try{const t=await d.signIn(this.signInAttributes.userInput,this.signInAttributes.password);P.debug(t),t.challengeName===o.SMSMFA||t.challengeName===o.SoftwareTokenMFA?(P.debug("confirm user with "+t.challengeName),this.handleAuthStateChange(h.ConfirmSignIn,t)):t.challengeName===o.NewPasswordRequired?(P.debug("require new password",t.challengeParam),this.handleAuthStateChange(h.ResetPassword,t)):t.challengeName===o.MFASetup?(P.debug("TOTP setup",t.challengeParam),this.handleAuthStateChange(h.TOTPSetup,t)):t.challengeName===o.CustomChallenge&&t.challengeParam&&"true"===t.challengeParam.trigger?(P.debug("custom challenge",t.challengeParam),this.handleAuthStateChange(h.CustomConfirmSignIn,t)):this.checkContact(t)}catch(e){f(e),"UserNotConfirmedException"===e.code?(P.debug("the user is not confirmed"),this.handleAuthStateChange(h.ConfirmSignUp,{username:this.signInAttributes.userInput})):"PasswordResetRequiredException"===e.code&&(P.debug("the user requires a new password"),this.handleAuthStateChange(h.ForgotPassword,{username:this.signInAttributes.userInput}))}finally{this.loading=!1}}buildDefaultFormFields(){const t=[];switch(this.usernameAlias){case"email":t.push({type:"email",required:!0,handleInputChange:this.handleFormFieldInputChange("email"),inputProps:{"data-test":"sign-in-email-input"}});break;case"phone_number":t.push({type:"phone_number",required:!0,handleInputChange:this.handleFormFieldInputChange("phone_number"),inputProps:{"data-test":"sign-in-phone-number-input"}});break;case"username":default:t.push({type:"username",required:!0,handleInputChange:this.handleFormFieldInputChange("username"),inputProps:{"data-test":"sign-in-username-input"}})}t.push({type:"password",hint:e("div",null,i.get(u.FORGOT_PASSWORD_TEXT)," ",e("amplify-button",{variant:"anchor",onClick:()=>this.handleAuthStateChange(h.ForgotPassword),"data-test":"sign-in-forgot-password-link"},i.get(u.RESET_PASSWORD_TEXT))),required:!0,handleInputChange:this.handleFormFieldInputChange("password"),inputProps:{"data-test":"sign-in-password-input"}}),this.newFormFields=[...t]}buildFormFields(){if(0===this.formFields.length)this.buildDefaultFormFields();else{const t=[];this.formFields.forEach(s=>{const n=Object.assign({},s);"password"===n.type&&(n.hint=b(n)?e("div",null,i.get(u.FORGOT_PASSWORD_TEXT)," ",e("amplify-button",{variant:"anchor",onClick:()=>this.handleAuthStateChange(h.ForgotPassword),"data-test":"sign-in-forgot-password-link"},i.get(u.RESET_PASSWORD_TEXT))):n.hint),n.handleInputChange=t=>this.handleFormFieldInputWithCallback(t,s),this.setFieldValue(n,this.signInAttributes),t.push(n)}),this.newFormFields=t}}setFieldValue(t,e){switch(t.type){case"username":case"email":e.userInput=void 0===t.value?"":t.value;break;case"phone_number":t.dialCode&&(this.phoneNumber.countryDialCodeValue=t.dialCode),this.phoneNumber.phoneNumberValue=t.value;break;case"password":e.password=void 0===t.value?"":t.value}}render(){return e("amplify-form-section",{headerText:this.headerText,handleSubmit:this.handleSubmit,testDataPrefix:"sign-in"},e("amplify-federated-buttons",{handleAuthStateChange:this.handleAuthStateChange,federated:this.federated}),!s(this.federated)&&e("amplify-strike",null,"or"),e("amplify-auth-fields",{formFields:this.newFormFields}),e("div",{slot:"amplify-form-section-footer",class:"sign-in-form-footer"},e("slot",{name:"footer"},e("slot",{name:"secondary-footer-content"},this.hideSignUp?e("span",null):e("span",null,i.get(u.NO_ACCOUNT_TEXT)," ",e("amplify-button",{variant:"anchor",onClick:()=>this.handleAuthStateChange(h.SignUp),"data-test":"sign-in-create-account-link"},i.get(u.CREATE_ACCOUNT_TEXT)))),e("slot",{name:"primary-footer-content"},e("amplify-button",{type:"submit",disabled:this.loading,"data-test":"sign-in-sign-in-button"},e("amplify-loading-spinner",{style:{display:this.loading?"initial":"none"}}),e("span",{style:{display:this.loading?"none":"initial"}},this.submitButtonText))))))}static get watchers(){return{formFields:["formFieldsHandler"]}}};q.style=":host{--footer-size:var(--amplify-text-sm);--footer-color:var(--amplify-grey);--footer-font-family:var(--amplify-font-family);--font-weight:var(--amplify-font-weight)}.sign-in-form-footer{font-family:var(--footer-font-family);font-size:var(--footer-size);color:var(--footer-color);font-weight:--font-weight;margin-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}@media (min-width: 672px){.sign-in-form-footer{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:baseline;align-items:baseline}}.sign-in-form-footer *+*{margin-bottom:15px}";const j=class{constructor(e){t(this,e),this.handleSubmit=t=>this.signUp(t),this.headerText=i.get(u.SIGN_UP_HEADER_TEXT),this.submitButtonText=i.get(u.SIGN_UP_SUBMIT_BUTTON_TEXT),this.haveAccountText=i.get(u.SIGN_UP_HAVE_ACCOUNT_TEXT),this.signInText=i.get(u.SIGN_IN_TEXT),this.formFields=[],this.handleAuthStateChange=m,this.usernameAlias="username",this.newFormFields=[],this.phoneNumber={countryDialCodeValue:c,phoneNumberValue:null},this.loading=!1,this.signUpAttributes={username:"",password:"",attributes:{}}}handleFormFieldInputChange(t){switch(t){case"username":return t=>this.signUpAttributes.username=t.target.value;case"password":return t=>this.signUpAttributes.password=t.target.value;case"email":return t=>this.signUpAttributes.attributes.email=t.target.value;case"phone_number":return t=>g(t,this.phoneNumber);default:return e=>this.signUpAttributes.attributes[t]=e.target.value}}handleFormFieldInputWithCallback(t,e){(e.handleInputChange?e.handleInputChange:(t,e)=>{e(t)})(t,this.handleFormFieldInputChange(e.type).bind(this))}async signUp(t){if(t&&t.preventDefault(),!d||"function"!=typeof d.signUp)throw new Error(p);if(this.phoneNumber.phoneNumberValue)try{this.signUpAttributes.attributes.phone_number=w(this.phoneNumber)}catch(e){f(e)}switch(this.usernameAlias){case"email":case"phone_number":this.signUpAttributes.username=this.signUpAttributes.attributes[this.usernameAlias]}try{const t=await d.signUp(this.signUpAttributes);this.handleAuthStateChange(h.ConfirmSignUp,Object.assign(Object.assign({},t.user),{signUpAttrs:this.signUpAttributes}))}catch(e){f(e)}}buildDefaultFormFields(){switch(this.usernameAlias){case"email":this.newFormFields=[{type:"email",placeholder:i.get(u.SIGN_UP_EMAIL_PLACEHOLDER),required:!0,handleInputChange:this.handleFormFieldInputChange("email"),inputProps:{"data-test":"sign-up-email-input"}},{type:"password",placeholder:i.get(u.SIGN_UP_PASSWORD_PLACEHOLDER),required:!0,handleInputChange:this.handleFormFieldInputChange("password"),inputProps:{"data-test":"sign-up-password-input"}},{type:"phone_number",required:!0,handleInputChange:this.handleFormFieldInputChange("phone_number"),inputProps:{"data-test":"sign-up-phone-number-input"}}];break;case"phone_number":this.newFormFields=[{type:"phone_number",required:!0,handleInputChange:this.handleFormFieldInputChange("phone_number"),inputProps:{"data-test":"sign-up-phone-number-input"}},{type:"password",placeholder:i.get(u.SIGN_UP_PASSWORD_PLACEHOLDER),required:!0,handleInputChange:this.handleFormFieldInputChange("password"),inputProps:{"data-test":"sign-up-password-input"}},{type:"email",placeholder:i.get(u.SIGN_UP_EMAIL_PLACEHOLDER),required:!0,handleInputChange:this.handleFormFieldInputChange("email"),inputProps:{"data-test":"sign-up-email-input"}}];break;case"username":default:this.newFormFields=[{type:"username",placeholder:i.get(u.SIGN_UP_USERNAME_PLACEHOLDER),required:!0,handleInputChange:this.handleFormFieldInputChange("username"),inputProps:{"data-test":"sign-up-username-input"}},{type:"password",placeholder:i.get(u.SIGN_UP_PASSWORD_PLACEHOLDER),required:!0,handleInputChange:this.handleFormFieldInputChange("password"),inputProps:{"data-test":"sign-up-password-input"}},{type:"email",placeholder:i.get(u.SIGN_UP_EMAIL_PLACEHOLDER),required:!0,handleInputChange:this.handleFormFieldInputChange("email"),inputProps:{"data-test":"sign-up-email-input"}},{type:"phone_number",required:!0,handleInputChange:this.handleFormFieldInputChange("phone_number"),inputProps:{"data-test":"sign-up-phone-number-input"}}]}}buildFormFields(){if(0===this.formFields.length)this.buildDefaultFormFields();else{const t=[];this.formFields.forEach(e=>{const i=Object.assign({},e);i.handleInputChange=t=>this.handleFormFieldInputWithCallback(t,e),this.setFieldValue(e,this.signUpAttributes),t.push(i)}),this.newFormFields=t}}setFieldValue(t,e){switch(t.type){case"username":e.username=void 0===t.value?"":t.value;break;case"password":e.password=void 0===t.value?"":t.value;break;case"email":e.attributes.email=t.value;break;case"phone_number":t.dialCode&&(this.phoneNumber.countryDialCodeValue=t.dialCode),this.phoneNumber.phoneNumberValue=t.value;break;default:e.attributes[t.type]=t.value}}componentWillLoad(){y(this.usernameAlias),this.buildFormFields()}formFieldsHandler(){this.buildFormFields()}render(){return e("amplify-form-section",{headerText:this.headerText,handleSubmit:this.handleSubmit,testDataPrefix:"sign-up"},e("amplify-auth-fields",{formFields:this.newFormFields}),e("div",{class:"sign-up-form-footer",slot:"amplify-form-section-footer"},e("slot",{name:"footer"},e("slot",{name:"secondary-footer-content"},e("span",null,this.haveAccountText," ",e("amplify-button",{variant:"anchor",onClick:()=>this.handleAuthStateChange(h.SignIn),"data-test":"sign-up-sign-in-link"},this.signInText))),e("slot",{name:"primary-footer-content"},e("amplify-button",{type:"submit","data-test":"sign-up-create-account-button"},e("amplify-loading-spinner",{style:{display:this.loading?"initial":"none"}}),e("span",{style:{display:this.loading?"none":"initial"}},this.submitButtonText))))))}static get watchers(){return{formFields:["formFieldsHandler"]}}};j.style=":host{--footer-font-family:var(--amplify-font-family);--footer-font-size:var(--amplify-text-sm);--footer-color:var(--amplify-grey);--font-weight:var(--amplify-font-weight)}.sign-up-form-footer{font-family:var(--footer-font-family);font-size:var(--footer-font-size);color:var(--footer-color);font-weight:--font-weight;display:-ms-flexbox;display:flex;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}@media (min-width: 672px){.sign-up-form-footer{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:baseline;align-items:baseline}}.sign-up-form-footer *+*{margin-bottom:15px}";const E=class{constructor(e){t(this,e),this.message=""}render(){return e("div",{class:"toast"},e("amplify-icon",{class:"toast-icon",name:"warning"}),this.message?e("span",null,this.message):null,e("slot",null),e("button",{class:"toast-close",onClick:this.handleClose}))}};E.style=':host{--background-color:var(--amplify-secondary-tint);--color:var(--amplify-white);--font-size:var(--amplify-text-sm);--font-family:var(--amplify-font-family);--close-icon-color:var(--amplify-white);--close-icon-hover:var(--amplify-red)}.toast-icon{padding-right:5px}.toast{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;position:absolute;top:0;left:0;width:100%;z-index:99;-webkit-box-shadow:0 0 5px 0 rgba(0, 0, 0, 0.3);box-shadow:0 0 5px 0 rgba(0, 0, 0, 0.3);padding:16px;background-color:var(--background-color);font-size:var(--font-size);color:var(--color);-webkit-box-sizing:border-box;box-sizing:border-box;border-radius:5px;font-family:var(--font-family)}.toast>span{margin-right:10px}.toast-close{margin-left:auto;-ms-flex-item-align:center;align-self:center;position:relative;width:18px;height:18px;overflow:hidden;cursor:pointer;background:transparent;border:none}.toast-close::before,.toast-close::after{content:"";position:absolute;height:2px;width:100%;top:50%;left:0;margin-top:-1px;background:var(--close-icon-color)}.toast-close:hover::before,.toast-close:hover::after{background:var(--close-icon-hover)}.toast-close::before{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-ms-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}.toast-close::after{-webkit-transform:rotate(-45deg);-moz-transform:rotate(-45deg);-ms-transform:rotate(-45deg);-o-transform:rotate(-45deg);transform:rotate(-45deg)}';const T=new n("AmplifyVerifyContact"),z=class{constructor(e){t(this,e),this.handleAuthStateChange=m,this.loading=!1}handleSubmit(t){t.preventDefault(),this.verifyAttr?this.submit(this.code):this.verify(this.contact)}async submit(t){const e=this.verifyAttr;if(!d||"function"!=typeof d.verifyCurrentUserAttributeSubmit)throw new Error(p);this.loading=!0;try{const i=await d.verifyCurrentUserAttributeSubmit(e,t);T.debug(i),this.handleAuthStateChange(h.SignedIn,this.user),this.verifyAttr=null}catch(i){f(i),T.error(i)}finally{this.loading=!1}}async verify(t){if(t){if(!d||"function"!=typeof d.verifyCurrentUserAttribute)throw new Error(p);this.loading=!0;try{const e=await d.verifyCurrentUserAttribute(t);T.debug(e),this.verifyAttr=t}catch(e){f(e),T.error(e)}finally{this.loading=!1}}else T.error("Neither Email nor Phone Number selected")}handleInputChange(t){const e=t.target.name;"code"===e?this.code=t.target.value:"contact"===e&&(this.contact=t.target.value)}renderSubmit(){return e("div",null,e("amplify-input",{inputProps:{autocomplete:"off","data-test":"verify-contact-code-input"},name:"code",placeholder:i.get(u.CODE_PLACEHOLDER),handleInputChange:t=>this.handleInputChange(t)}))}renderVerify(){const t=this.user;if(!t)return T.debug("No user to verify"),null;const{unverified:s}=t;if(!s)return T.debug("Unverified variable does not exist on user"),null;const{email:n,phone_number:a}=s;return e("div",null,n&&e("amplify-radio-button",{label:i.get(u.VERIFY_CONTACT_EMAIL_LABEL),key:"email",name:"contact",value:"email",handleInputChange:t=>this.handleInputChange(t),inputProps:{"data-test":"verify-contact-email-radio"}}),a&&e("amplify-radio-button",{label:i.get(u.VERIFY_CONTACT_PHONE_LABEL),key:"phone_number",name:"contact",value:"phone_number",handleInputChange:t=>this.handleInputChange(t),inputProps:{"data-test":"verify-contact-email-radio"}}))}render(){return e("amplify-form-section",{handleSubmit:t=>this.handleSubmit(t),headerText:i.get(u.VERIFY_CONTACT_HEADER_TEXT),loading:this.loading,secondaryFooterContent:e("span",null,e("amplify-button",{variant:"anchor",onClick:()=>this.handleAuthStateChange(h.SignedIn,this.user)},"Skip")),submitButtonText:i.get(this.verifyAttr?u.VERIFY_CONTACT_SUBMIT_LABEL:u.VERIFY_CONTACT_VERIFY_LABEL)},this.verifyAttr?this.renderSubmit():this.renderVerify())}};export{x as amplify_confirm_sign_in,C as amplify_confirm_sign_up,F as amplify_forgot_password,I as amplify_require_new_password,q as amplify_sign_in,j as amplify_sign_up,E as amplify_toast,z as amplify_verify_contact}